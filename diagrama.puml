@startuml

package tp2 <<Folder>> {
    class Aplicacion
    class Indice
    class Cliente
    class Credito
    class Iterador
}

package stdio.h <<Folder>> {
    class FILE
}

package avl.h <<Folder>> {
    class AVL
    class Lista
}

package menu.h <<Folder>> {
    class Menu
}

class Aplicacion {
	base: FILE
	nuevos: Cliente[0..*]
	indices: Indice[1..*]
	persistidos: int
	siguienteID: int
	seleccionarCredito(Credito[0..3]): int
	seleccionarOperacion(Credito): int
	formularioMonto(Credito): int
	formularioClaves(clave: enum, minimo: char[1..*], maximo: char[1..*])
}

class Cliente {
	nombre: char[15]
 	inicial: char
	apellido: char[15]
	dni: int
	edad: char
	referencia: int
	creditos: Credito[0..3]
	mostrarCliente(self: Cliente): void
	crearCliente(): Cliente
	formularioCliente(self: Cliente): Cliente
	recuperarCliente(base: FILE): Cliente
	guardarCliente(self: Cliente, base: FILE): void
	borrarCliente(self: Cliente): void
	esPosibleOtroCredito(self: Cliente): int
	crearCreditoCliente(self: Cliente): Credito
	borrarCreditoCliente(self: Cliente, credito: Credito): void
}

class Credito {
	fecha: int
  	saldo: int
	pagarCredito(self: Credito, monto: int): void
	mostrarCredito(self: Credito): void
	formularioCredito(self: Credito): Credito
	esNuloCredito(self: Credito): int
}

class Indice {
    agregarClaveIndice(self: Indice, clave: Clave): Indice
    borrarClaveIndice(self: Indice, clave: Clave): Indice
    obtenerVistaMenorIndice(self: Indice, clave: Clave): Indice
    obtenerVistaMayorIndice(self: Indice, clave: Clave): Indice
    obtenerIterador(self: Indice): Iterador
}

class Iterador {
	siguienteIterador(self: Iterador): Clave
}

Aplicacion .up.> Menu
Aplicacion -left-> "[1..*]" Indice
Aplicacion -up-> FILE
Aplicacion --> "[0..*]" Cliente
Aplicacion ..> Credito
Cliente o-left- "[0..3]" Credito
Cliente .up.> FILE
Indice ..> FILE
Indice -up-|> AVL
Indice +-down- Iterador
Iterador -up-|> Lista
Aplicacion ..> Iterador

hide class circle

@enduml
